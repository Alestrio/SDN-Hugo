<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deployment configurations on SDN-Cloudstack - Documentation</title><link>/en/technique/deployment/</link><description>Recent content in Deployment configurations on SDN-Cloudstack - Documentation</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Thu, 21 Oct 2021 16:56:05 +0200</lastBuildDate><atom:link href="/en/technique/deployment/index.xml" rel="self" type="application/rss+xml"/><item><title>Google Artifact Registry</title><link>/en/technique/deployment/google-ar/</link><pubDate>Tue, 21 Dec 2021 18:17:10 +0000</pubDate><guid>/en/technique/deployment/google-ar/</guid><description>Originally, the Docker image hosting was done on DockerHub, which offers hosting of ONE private Docker image. Our project requires at least two, so we had to find other solutions.
Google Cloud Platform And it is in our research that we discovered Google Cloud Platform, also called &amp;ldquo;GCP&amp;rdquo;. This set of cloud tools signed by Google offers a Docker container hosting service called Google Artifact Registry, and offers a trial offer including $300 for 90 days.</description></item><item><title>API Deployment</title><link>/en/technique/deployment/deployment/</link><pubDate>Sun, 17 Oct 2021 12:42:10 +0000</pubDate><guid>/en/technique/deployment/deployment/</guid><description>Prerequisites We have seen in the config part that the deployment of our API on DockerHub is automated thanks to a GithubRunner. So we will use the generated docker image to declare new instances of our API.
Docker-Compose Here is an example of the API instantiation configuration on Docker-Compose:
api_r1: image: alestrio/sdn-cloudstack # Base image name ports: - &amp;#34;8064:8000&amp;#34; # Port exposure (soon deprecated, see proxy..... part) volumes: - /home/user/compose/api/r1/config.</description></item><item><title>CI/CD : Continuous Integration / Continuous Developpement</title><link>/en/technique/deployment/cicd/</link><pubDate>Sun, 17 Oct 2021 12:42:10 +0000</pubDate><guid>/en/technique/deployment/cicd/</guid><description>This article is about the CI/CD we are applying for our project.
Documentation We use Github to store the sources of the documentation (this website). So, to deploy new versions, we decided to use a CI/CD. CI/CD stands for Continuous Integration / Continuous Development, and allows to automate the testing and the deployment part of a project.
First of all, we have to configure the hosting machine. Since our site is self-hosted, we are going to use what is called a &amp;ldquo;self-hosted github runner&amp;rdquo;, whose documentation can be found here: https://docs.</description></item></channel></rss>