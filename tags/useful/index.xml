<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>useful on SDN-Cloudstack - Documentation</title><link>/tags/useful/</link><description>Recent content in useful on SDN-Cloudstack - Documentation</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><lastBuildDate>Tue, 21 Dec 2021 10:35:34 +0200</lastBuildDate><atom:link href="/tags/useful/index.xml" rel="self" type="application/rss+xml"/><item><title>Traefik Reverse Proxy</title><link>/technique/config/proxy/traefik/</link><pubDate>Tue, 21 Dec 2021 10:35:34 +0200</pubDate><guid>/technique/config/proxy/traefik/</guid><description>We have seen in previous chapters, the configuration of NGINX reverse-proxy. However, today, with Docker, NGINX is a bit obsolete, and there are more dynamic solutions like Traefik, which we will talk about in this article.
The Traefik reverse proxy Traefik is an open-source reverse-proxy (also called edge router). A reverse proxy is a program that manages access to servers in a network behind it, adding security, logging, and sometimes encryption.</description></item><item><title>Hugo Proxy Config</title><link>/technique/config/proxy/hugo-conf/</link><pubDate>Thu, 21 Oct 2021 17:35:34 +0200</pubDate><guid>/technique/config/proxy/hugo-conf/</guid><description>hugo.conf (For the web site you are currently on) map $sent_http_content_type $expires { &amp;#34;text/html&amp;#34; epoch; &amp;#34;text/html; charset=utf-8&amp;#34; epoch; default off; } server { listen 80; # the port nginx is listening on server_name doc.sdn.chalons.univ-reims.fr; gzip on; gzip_types text/plain application/xml text/css application/javascript; gzip_min_length 1000; location / { expires $expires; proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_read_timeout 1m; proxy_connect_timeout 1m; proxy_pass http://hugo; # set the address of the Node.</description></item><item><title>Default-Zones</title><link>/technique/config/dns/default-zones/</link><pubDate>Thu, 21 Oct 2021 17:18:05 +0200</pubDate><guid>/technique/config/dns/default-zones/</guid><description>named.conf.default-zones // prime the server with knowledge of the root servers zone &amp;#34;.&amp;#34; { type hint; file &amp;#34;/usr/share/dns/root.hints&amp;#34;; }; // be authoritative for the localhost forward and reverse zones, and for // broadcast zones as per RFC 1912 zone &amp;#34;localhost&amp;#34; { type master; file &amp;#34;/etc/bind/db.local&amp;#34;; }; zone &amp;#34;127.in-addr.arpa&amp;#34; { type master; file &amp;#34;/etc/bind/db.127&amp;#34;; }; zone &amp;#34;0.in-addr.arpa&amp;#34; { type master; file &amp;#34;/etc/bind/db.0&amp;#34;; }; zone &amp;#34;255.in-addr.arpa&amp;#34; { type master; file &amp;#34;/etc/bind/db.255&amp;#34;; }; zone &amp;#34;cloudstack.</description></item><item><title>Zone sdn.chalons.univ-reims.fr</title><link>/technique/config/dns/zone-sdn-chalons-univ-reims-fr/</link><pubDate>Thu, 21 Oct 2021 17:23:19 +0200</pubDate><guid>/technique/config/dns/zone-sdn-chalons-univ-reims-fr/</guid><description>zone.sdn.chalons.univ-reims.fr ; ; BIND zone file for sdn.chalons.univ-reims.fr ; @ IN SOA ns1.sdn.chalons.univ-reims.fr admin.sdn.chalons.univ-reims.fr ( 20210923 ; Serial 120 ; Refresh 2mn 60 ; Retry 1mn 600 ; Expire 10mn 3600 ) ; Negative Cache TTL 1h ; DNS SERVER sdn.chalons.univ-reims.fr. IN NS ns1.sdn.chalons.univ-reims.fr. ; IP DNS ns1 IN A 10.59.50.233 ; IP WEB-SERVICE doc IN A 10.59.50.233 ; HUGO www IN A 10.59.50.233 ; APPLICATION/SITE-WEB</description></item><item><title>Docker-Compose</title><link>/technique/config/docker-compose/docker-compose/</link><pubDate>Thu, 21 Oct 2021 17:11:26 +0200</pubDate><guid>/technique/config/docker-compose/docker-compose/</guid><description>docker-compose.yml version: &amp;#34;3&amp;#34; services: hugo: image: nginx:latest volumes: - /home/user/compose/hugo/sdn_notice/public/:/usr/share/nginx/html/ networks: backend: proxy: image: nginx:latest ports: - &amp;#34;80:80&amp;#34; - &amp;#34;443:443&amp;#34; volumes: - /home/user/compose/proxy:/etc/nginx/conf.d/:ro networks: backend: application: image: nginx:latest volumes: - /home/user/compose/application/:/usr/share/nginx/html/ networks: backend: proxy: image: nginx:latest ports: - &amp;#34;80:80&amp;#34; - &amp;#34;443:443&amp;#34; volumes: - /home/user/compose/proxy:/etc/nginx/conf.</description></item></channel></rss>