<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configurations de déploiement on SDN-Cloudstack - Documentation</title><link>/technique/deployment/</link><description>Recent content in Configurations de déploiement on SDN-Cloudstack - Documentation</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Thu, 21 Oct 2021 16:56:05 +0200</lastBuildDate><atom:link href="/technique/deployment/index.xml" rel="self" type="application/rss+xml"/><item><title>Google Artifact Registry</title><link>/technique/deployment/google-ar/</link><pubDate>Tue, 21 Dec 2021 18:17:10 +0000</pubDate><guid>/technique/deployment/google-ar/</guid><description>Originellement, l&amp;rsquo;hébergement de l&amp;rsquo;image Docker se faisait sur DockerHub, qui propose l&amp;rsquo;hébergement d&amp;rsquo;UNE image Docker privée. Notre projet en nécessite au minimum deux, ainsi, il a fallu trouver d&amp;rsquo;autres solutions.
Google Cloud Platform Et c&amp;rsquo;est dans nos recherches que nous avons découvert Google Cloud Platform, aussi appelé &amp;ldquo;GCP&amp;rdquo;. Cet ensemble d&amp;rsquo;outils cloud signé Google propose un service d&amp;rsquo;hébergement de conteneurs Docker appelé Google Artifact Registry, et propose une offre d&amp;rsquo;essai comprenant 300$ pendant 90j.</description></item><item><title>CI/CD : Continuous Integration / Continuous Developpement</title><link>/technique/deployment/cicd/</link><pubDate>Sun, 17 Oct 2021 12:42:10 +0000</pubDate><guid>/technique/deployment/cicd/</guid><description>Cet article traite de la CI/CD que nous appliquons pour notre projet.
Documentation Nous utilisons Github afin de stocker les sources de la documentation (ce site web). Ainsi, pour déployer les nouvelles versions, nous avons décidé d&amp;rsquo;utiliser une CI/CD. CI/CD veut dire Continuous Integration / Continuous Developpement, et permet d&amp;rsquo;automatiser la partie tests et la partie déploiement d&amp;rsquo;un projet.
Avant toute chose, il faut configurer la machine d&amp;rsquo;hébergement. Puisque notre site est auto-hébergé, nous allons utiliser ce que l&amp;rsquo;on appelle un &amp;ldquo;self-hosted github runner&amp;rdquo;, dont la documentation est trouvable ici : https://docs.</description></item><item><title>Déploiement de l'API</title><link>/technique/deployment/deployment/</link><pubDate>Sun, 17 Oct 2021 12:42:10 +0000</pubDate><guid>/technique/deployment/deployment/</guid><description>Prérequis Nous avons vu dans la partie config que le déploiement de notre API sur DockerHub est automatisé grâce à une GithubRunner. Nous allons donc nous servir de l&amp;rsquo;image docker générée afin de déclarer de nouvelles instances de notre API.
Docker-Compose Voici un exemple de configuration d&amp;rsquo;instanciation de l&amp;rsquo;API sur Docker-Compose :
api_r1: image: alestrio/sdn-cloudstack # Nom de l&amp;#39;image de base ports: - &amp;#34;8064:8000&amp;#34; # Exposition de port (bientôt obsolète, voir partie proxy.</description></item></channel></rss>